name: Deploy infrastructure
on:
  workflow_call:
    inputs:
      terraform-version:
        description: The Terraform version to be used
        type: string
        required: true
      env-name:
        description: Environment name (staging or production)
        type: string
        required: true
      destroy-environment:
        description: Destroy the environment
        type: boolean
        required: false
        default: false
#      pmp-rx-backend-image-tag:
#        description: Container image tag for pmp-rx-backend (only Reside)
#        type: string
#        required: false
#        default: latest
    secrets:
      kubernetes-config-base64:
        description: Configuration file for Kubernetes in base64
        required: true
      db-admin-password:
        description: Database admin password
        required: true
jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      CONFIG_PATH: environments/${{ inputs.env-name }}
      TF_VAR_database_admin_password: ${{ secrets.db-admin-password }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false
          terraform_version: ${{ inputs.terraform-version }}
      - name: Extract Kubernetes configuration
        id: k8s-config
        uses: timheuer/base64-to-file@v1.2
        with:
          fileName: config
          fileDir: .kube/
          encodedString: ${{ secrets.kubernetes-config-base64 }}
      - name: Create environment variables
        run: echo "KUBE_CONFIG_PATH=${{ steps.k8s-config.outputs.filePath }}" >> $GITHUB_ENV
      - name: Terraform init
        run: terraform init -input=false -backend-config="${{ env.CONFIG_PATH }}/kubernetes.tfbackend"
      - name: Terraform validate
        run: terraform validate
      - name: Terraform plan
        if: ${{ ! github.event.inputs.destroy-environment }}
        run: terraform plan -compact-warnings -var-file="${{ env.CONFIG_PATH }}/values.tfvars"
      - name: Terraform apply
        if: ${{ ! github.event.inputs.destroy-environment }}
        run: terraform apply -compact-warnings -auto-approve -var-file="${{ env.CONFIG_PATH }}/values.tfvars"
      - name: Terraform infrastructure
        if: ${{ github.event.inputs.destroy-environment }}
        run: |
          terraform plan -destroy -compact-warnings -var-file="${{ env.CONFIG_PATH }}/values.tfvars"
          terraform apply -destroy -compact-warnings -auto-approve -var-file="${{ env.CONFIG_PATH }}/values.tfvars"